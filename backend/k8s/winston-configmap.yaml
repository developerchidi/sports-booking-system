apiVersion: v1
kind: ConfigMap
metadata:
  name: winston-config
  namespace: sports-booking
data:
  config.js: |
    const winston = require('winston');
    const { format } = winston;
    const { combine, timestamp, printf, colorize } = format;

    const logFormat = printf(({ level, message, timestamp, ...metadata }) => {
      let msg = `${timestamp} [${level}] : ${message}`;
      if (Object.keys(metadata).length > 0) {
        msg += JSON.stringify(metadata);
      }
      return msg;
    });

    const logger = winston.createLogger({
      level: process.env.LOG_LEVEL || 'info',
      format: combine(
        timestamp(),
        logFormat
      ),
      transports: [
        new winston.transports.Console({
          format: combine(
            colorize(),
            logFormat
          )
        }),
        new winston.transports.File({
          filename: '/var/log/app/error.log',
          level: 'error'
        }),
        new winston.transports.File({
          filename: '/var/log/app/combined.log'
        })
      ]
    });

    module.exports = logger; 